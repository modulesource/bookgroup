<?php

/**
 * @file
 * Manage a book group library of E-Books.
 */

/**
 * Implements Hook Menu.
 */
function bookgroup_menu() {
  $items = array();
  $items['bookgroup'] = array(
    'title' => t('Book Groups'),
    'description' => t('Manage an online Book Group'),
    'page callback' => 'bookgroup_entry',
    'access callback' => 'bookgroup_user_access',
    'access arguments' => array('bookgroup_access'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['bookgroup/groups'] = array(
    'title' => t('Book Groups'),
    'weight' => 10,
    'description' => 'Manage the Inventory of Imported Files and Tables.',
    'page callback' => 'bookgroup_groups',
    'access callback' => 'bookgroup_user_access',
    'access arguments' => array('group_access'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['bookgroup/libraries'] = array(
    'title' => t('Libraries'),
    'weight' => 20,
    'description' => 'Manage the Inventory of Imported Files and Tables.',
    'page callback' => 'bookgroup_libraries',
    'access callback' => 'bookgroup_user_access',
    'access arguments' => array('library_access'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['bookgroup/books/edit'] = array(
    'page callback' => 'bookgroup_books_edit',
    'access callback' => 'bookgroup_user_access',
    'access arguments' => array('books_edit'),
    'type' => MENU_CALLBACK,
  );
  $items['bookgroup/discussions'] = array(
    'title' => t('Discussions'),
    'weight' => 30,
    'description' => 'Manage the Inventory of Imported Files and Tables.',
    'page callback' => 'bookgroup_discussions',
    'access callback' => 'bookgroup_user_access',
    'access arguments' => array('discussion_access'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['bookgroup/members'] = array(
    'title' => t('Members'),
    'weight' => 40,
    'description' => 'Manage the Inventory of Imported Files and Tables.',
    'page callback' => 'bookgroup_members',
    'access callback' => 'bookgroup_user_access',
    'access arguments' => array('membership_access'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

function bookgroup_user_access($string='', $account = NULL) {
//  drupal_set_message('<pre>'.t('User Access: ').var_export($string,TRUE).
//                     "\n".t('acct: ').var_export($account,TRUE).'</pre>');
  $access = TRUE;

  return $access;
}

/**
 * Initial Module Entry.
 */
function bookgroup_entry() {
//  drupal_set_message(t('Got here.'));
  drupal_goto('bookgroup/groups');
}
/**
 * Bookgroup Dashboard
 */
function bookgroup_groups() {
//  drupal_set_message(t('Got to Groups.'));
  $data = new stdClass();
  
  $form = drupal_get_form('bookgroup_groups_form', $data);
  return drupal_render($form);
}
function bookgroup_groups_form($form, &$form_state, $data) {
  $form['submit'] = array(
    '#type' => 'submit',
    '#attributes' => array('style'=>'visibility:hidden'),
    '#value' => t('Submit'),
  );  
  return $form;
}
function bookgroup_groups_form_validate($form, &$form_state) {
}
function bookgroup_groups_form_submit($form, &$form_state) {
}
/**
 * Bookgroup Libraries
 */
function bookgroup_libraries() {
  global $user;
  
  $data = new stdClass();
  $data->form = '';
  $data->my_libraries = array();

  $result = db_select('bookgroup_memberships','m')
                ->fields('m')
                ->condition('lid',0,'<>');
  if($user->uid != 1) $result->condition('uid',$user->uid,'=');
  $set = $result->execute();
  while($row = $set->fetch()) {
    $data->my_libraries[] = $row->lid;
    if(!isset($_SESSION['bookgroup_current_library'])) {
      $data->current_library = $row->lid;
      $_SESSION['bookgroup_current_library'] = $row->lid;
    }
  }
  $data->librarylist = bookgroup_get_libraries_list();
  
  unset($data->booklist);
  $data->booklist = array();
  if(in_array($_SESSION['bookgroup_current_library'],$data->my_libraries)) {
    $data->form = 'list';
    if(module_exists('datatables')) {
      $result = db_select('bookgroup_books','b')
                    ->fields('b')
                    ->condition('lid',$_SESSION['bookgroup_current_library'],'=')
                    ->orderBy('book_category')
                    ->orderBy('book_title')
                    ->orderBy('book_sub_title')
                    ->execute();
    } else {
      $result = db_select('bookgroup_books','b')
                    ->fields('b')
                    ->condition('lid',$_SESSION['bookgroup_current_library'],'=')
                    ->orderBy('book_category')
                    ->orderBy('book_title')
                    ->orderBy('book_sub_title')
                    ->extend('PagerDefault')->limit(10)
                    ->execute();
    }
    while($row = $result->fetch()) {
      $data->booklist[] = $row;
    }
  } else {
    $data->form = 'req_access';
    $data->lib = db_select('bookgroup_libraries','l')
                        ->fields('l')
                        ->condition('lid',$_SESSION['bookgroup_current_library'],'=')
                        ->execute()
                        ->fetch();                 
  }

  $form = drupal_get_form('bookgroup_libraries_form', $data);
  return drupal_render($form);
}
function bookgroup_libraries_form($form, &$form_state, $data) {
//  drupal_set_message('<pre>data: '.var_export($data,TRUE).'</pre>');
  $form['library'] = array(
//    '#prefix' => '<table><tr><td>',
    '#type' => 'select',
    '#title' => t('Library'),
    '#options' => $data->librarylist,
    '#value' => $_SESSION['bookgroup_current_library'],
    '#attributes' => array('onchange' => 'this.form.submit();'),
//    '#suffix' => '</td><td><br>',
  );
  if($data->form != 'list') {
    drupal_set_message('<pre>data: '.var_export($data,TRUE).'</pre>');
    $form['status'] = array(
      '#type' => 'textfield',
      '#title' => t('Status'),
      '#disabled' => TRUE,
      '#value' => t('You do not have access to this Library.'),
    );
    $form['join_library'] = array(
      '#type' => 'submit',
      '#value' => t('Join'),
//      '#suffix' => '</td><td width="80%"></td></tr></table>',
    );    
    $form['submit'] = array(
      '#type' => 'submit',
      '#attributes' => array('style'=>'visibility:hidden'),
      '#value' => t('Submit'),
    );  
  } else {
    $data_header = array(
                     array(
                       'data' => '<center>'.t('Subject').'</center>',
                       'datatable_options' => array(
                         'bSortable' => TRUE,
                         'bSearchable' => TRUE,
                       ),
                     ),
                     array(
                       'data' => '<center>'.t('Title').'</center>',
                       'datatable_options' => array(
                         'bSortable' => TRUE,
                         'bSearchable' => TRUE,
                       ),
                     ),
                     array(
                       'data' => '<center>'.t('Pages').'</center>',
                       'datatable_options' => array(
                         'bSortable' => FALSE,
                         'bSearchable' => FALSE,
                       ),
                     ),
  //                   array(
  //                     'data' => '<center>'.t('Status').'</center>',
  //                     'datatable_options' => array(
  //                       'bSortable' => FALSE,
  //                       'bSearchable' => FALSE,
  //                     ),
  //                   ),
                     array(
                       'data' => '<center>'.l('[ '.t('ADD').' ]','bookgroup/books/edit',array('query'=>array('b'=>0))).'</center>',
                       'datatable_options' => array(
                         'bSortable' => FALSE,
                         'bSearchable' => FALSE,
                       ),
                     ),        
                   );
    $output = '';
    $subjects = array();
    $rows = $data->booklist;
    if(count($rows) > 0) {
      foreach($rows as $row) {
        $filename = $row->book_filename;
        $title = l($row->book_title,$row->book_filename,array('attributes'=>array('target'=>'_blank','title'=>$row->book_sub_title."\n\n".$row->book_contents)));
        if($row->book_pages == 0) $pages = '';
        else $pages = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'.sprintf('% 10d',$row->book_pages);
        $books[] = array($row->book_category,
                         $title,
                         $pages,
  //                       '<center>'.$row->status.'</center>',
                         '<center style="white-space:nowrap;">'.
                         l('[ EDIT ]','bookgroup/books/edit',array('query'=>array('b'=>$row->bid,'a'=>''))).' '.
                         l('[ DELETE ]','/bookgroup/books/edit',array('query'=>array('b'=>$row->bid,'a'=>'DEL'))).
                         '</center>',
                        );
      }
    } else {
      $books[] = array('',t('No Books Found'),'','','');
    }
    if(module_exists('datatables')) {
      $output = theme('datatable', array('header' => $data_header,
                                         'rows' => $books,
                                         'attributes' => array('datatable_options' => array(
                                                                 'bFilter'         => TRUE,
                                                                 'bInfo'           => TRUE,
                                                                 'bScroll'         => TRUE,
                                                                 'scrollY'         => 200,
                                                                 'iDisplayLength'  => 10,
                                                                 'bScrollCollapse' => TRUE,
                                                                 'sPaginationType' => 'full_numbers',
                                                                 'paging'          => FALSE,),
                                         'style' => 'line-height:80%;'),
                                  ));
    } else {
      $html_header = array();
      foreach($data_header as $n => $val) {
        $html_header[$n] = $val['data'];
      }
      $output = theme('table', array('header' => $html_header,
                                     'rows' => $books,
                                     'attributes' => array('style'=>'line-height: 70%;')));
      // add the pager
      $output .= theme('pager');
    }
    $form['list'] = array(
      '#type' => 'item',
  //    '#title' => t('Book Subjects'),
      '#markup' => $output,
    );
    $form['submit'] = array(
      '#type' => 'submit',
      '#attributes' => array('style'=>'visibility:hidden'),
      '#value' => t('Submit'),
    );  
  }
  return $form;
}
function bookgroup_libraries_form_validate($form, &$form_state) {
}
function bookgroup_libraries_form_submit($form, &$form_state) {
  $in = $form_state['input'];
  $setup = $form_state['values'];
//  drupal_set_message("<pre>***********************\n* form post received. *\n***********************</pre>");
//  drupal_set_message('<pre>in: '.var_export($in,TRUE).'</pre>');
//  drupal_set_message('<pre>setup: '.var_export($setup,TRUE).'</pre>');
  
  if($in['library'] != $setup['library']) {
    $_SESSION['bookgroup_current_library'] = $in['library'];
  }
}
function bookgroup_get_libraries_list() {
  $list = array();
  $result = db_select('bookgroup_libraries','l')
                ->fields('l')
                ->orderBy('bookgroup_libraryname')
                ->execute();
  while($row = $result->fetch()) {
    $list[$row->lid] = $row->bookgroup_libraryname;
  }
  return $list;
}
/**
 * Bookgroup Discussions
 */
function bookgroup_discussions() {
  $data = new stdClass();
  
  $form = drupal_get_form('bookgroup_discussions_form', $data);
  return drupal_render($form);
}
function bookgroup_discussions_form($form, &$form_state, $data) {
  $form['submit'] = array(
    '#type' => 'submit',
    '#attributes' => array('style'=>'visibility:hidden'),
    '#value' => t('Submit'),
  );  
  return $form;
}
function bookgroup_discussions_form_validate($form, &$form_state) {
}
function bookgroup_discussions_form_submit($form, &$form_state) {
}
/**
 * Bookgroup Memberships
 */
function bookgroup_members() {
  $data = new stdClass();
  
  $form = drupal_get_form('bookgroup_members_form', $data);
  return drupal_render($form);
}
function bookgroup_members_form($form, &$form_state, $data) {
  $form['submit'] = array(
    '#type' => 'submit',
    '#attributes' => array('style'=>'visibility:hidden'),
    '#value' => t('Submit'),
  );  
  return $form;
}
function bookgroup_members_form_validate($form, &$form_state) {
}
function bookgroup_members_form_submit($form, &$form_state) {
}

